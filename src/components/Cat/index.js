/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { useRef, useState, useEffect } from 'react'
import { useFrame } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'
import { AnimationMixer } from 'three'

import CatPath from '../../assets/cat.glb'

function Cat(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF(CatPath)

  const actions = useRef()
  const [mixer] = useState(() => new AnimationMixer())
  useFrame((_, delta) => mixer.update(delta))
  useEffect(() => {
    actions.current = {
      'Take 001': mixer.clipAction(animations[0], group.current),
    }
    actions.current['Take 001'].setEffectiveTimeScale(3.5).play()
    return () => animations.forEach((clip) => mixer.uncacheClip(clip))
  }, [animations, mixer])
  return (
    <group ref={group} {...props}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <primitive object={nodes._rootJoint} />
          <skinnedMesh
            castShadow
            material={materials.Material_105}
            geometry={nodes['sk_player_cat_lod0_Material_#105_0'].geometry}
            skeleton={nodes['sk_player_cat_lod0_Material_#105_0'].skeleton}
          />
          <skinnedMesh
            castShadow
            material={materials.Material_81}
            geometry={nodes['sk_player_cat_lod0_Material_#81_0'].geometry}
            skeleton={nodes['sk_player_cat_lod0_Material_#81_0'].skeleton}
          />
          <skinnedMesh
            castShadow
            material={materials.Material_93}
            geometry={nodes['sk_player_cat_lod0_Material_#93_0'].geometry}
            skeleton={nodes['sk_player_cat_lod0_Material_#93_0'].skeleton}
          />
        </group>
      </group>
    </group>
  )
}

export default Cat

useGLTF.preload(CatPath)
